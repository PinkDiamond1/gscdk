name: build tinygo

on:
  push:
    branches: [ dev ]
    tags:
      - "v*.*.*"
  # pull_request:
  #   branches: [ main ]

jobs:
  run:
    runs-on: ${{ matrix.os }}
    env:
      GSCDK_VERSION: v0.2.0
    strategy:
      matrix:
        # python-version: [3.7, 3.8, 3.9]
        # os: ['windows-latest', 'ubuntu-18.04', 'macos-latest']
        python-version: [3.9]
        os: ['windows-latest']
      fail-fast: false

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Install wget
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install wget --no-progress
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache llvm-build v11
        uses: actions/cache@v2
        id: cache-llvm-build-v1
        with:
          key: ${{ matrix.os }}-llvm-build-v11-1
          path: tinygo/llvm-build
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: copy llvm
        working-directory: tinygo
        run: |
          cp -r ../eosio.cdt/eosio_llvm llvm-project
      - name: Build llvm
        if: steps.cache-llvm-build-v1.outputs.cache-hit != 'true'
        working-directory: tinygo
        run: |
          make llvm-build          
      - name: Build llvm check
        working-directory: tinygo
        run: |
          ls llvm-build/lib/*
      - name: Build eosio.cdt
        working-directory: eosio.cdt
        run: |
          mkdir build
          cd build
          cp -r ../../tinygo/llvm-build eosio_llvm
          cmake -G Ninja ..
          ninja
      # - name: Cache wasi-libc sysroot
      #   uses: actions/cache@v2
      #   id: cache-wasi-libc
      #   with:
      #     key: ${{ matrix.os }}-wasi-libc-sysroot-v1
      #     path: lib/wasi-libc/sysroot
      # - name: Build wasi-libc
      #   if: steps.cache-wasi-libc.outputs.cache-hit != 'true'
      #   working-directory: tinygo
      #   run: make wasi-libc
      # - name: Cache wasi-libc-eosio sysroot
      #   uses: actions/cache@v2
      #   id: cache-wasi-libc-eosio
      #   with:
      #     key: ${{ matrix.os }}-wasi-libc-eosio-sysroot-v1
      #     path: tinygo/lib/wasi-libc-eosio/sysroot
      # - name: Build wasi-libc-eosio
      #   if: steps.cache-wasi-libc-eosio.outputs.cache-hit != 'true'
      #   working-directory: tinygo
      #   run: make wasi-libc-eosio
      # - name: Build tinygo
      #   working-directory: tinygo
      #   run: |
      #     make
      #     make release
      # - name: Testing
      #   if: ${{ matrix.os != 'windows-latest' }}
      #   working-directory: tinygo
      #   run: |
      #     ./build/tinygo help
      # - name: get release file
      #   id: releasefile
      #   working-directory: tinygo
      #   run: |
      #     echo "::set-output name=value::$(python ../scripts/get_release_file.py)"
      # - name: rename file
      #   working-directory: tinygo
      #   run: |
      #     mv ./build/${{ steps.releasefile.outputs.value }} ./build/uuosio.gscdk-${{ env.GSCDK_VERSION }}-${{ matrix.os }}.tar.gz
      # - name: Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # - name: get plat name
      #   id: platname
      #   run: |
      #     echo "::set-output name=value::$(python scripts/get_plat_name.py)"
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     python -m pip install wheel
      # - name: copy tinygo to pysrc
      #   if: ${{ matrix.os == 'windows-latest' }}
      #   run: |
      #     # remove symbol link
      #     rm pysrc/tinygo
      #     cp -r tinygo/build/release/tinygo pysrc/tinygo
      # - name: Build uuosio.gscdk
      #   run: |
      #     ./script/release.sh
      #     python setup.py sdist bdist_wheel --plat-name ${{ steps.platname.outputs.value }} > setup.log
      # - name: get whl file
      #   id: whlfile
      #   run: |
      #     echo "::set-output name=value::$(python scripts/get_whl_file.py)"
      # - name: Install uuosio.gscdk
      #   run: |
      #     python -m pip uninstall gscdk -y;python -m pip install ./dist/${{ steps.whlfile.outputs.value }}
      # - name: Test
      #   working-directory: .
      #   run: |
      #     eosio-go help
      # - name: release-tinygo
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       ./tinygo/build/uuosio.gscdk-${{ env.GSCDK_VERSION }}-${{ matrix.os }}.tar.gz
      #       ./dist/${{ steps.whlfile.outputs.value }}